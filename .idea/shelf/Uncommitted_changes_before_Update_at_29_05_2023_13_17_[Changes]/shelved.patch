Index: src/main/java/GameEngine.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.io.FileReader;\r\nimport java.io.FileWriter;\r\nimport java.io.IOException;\r\nimport java.lang.reflect.Type;\r\nimport java.util.ArrayList;\r\nimport java.util.Random;\r\nimport java.util.Scanner;\r\nimport com.google.gson.Gson;\r\nimport com.google.gson.GsonBuilder;\r\nimport com.google.gson.reflect.TypeToken;\r\n\r\n\r\npublic class GameEngine implements IGameEngine{\r\n    private Random random = new Random();\r\n    private BaseGameHeroes heroes;\r\n    private Scanner sc = new Scanner(System.in);\r\n    private IParty playerParty;\r\n    private IParty cpuParty;\r\n    private Display display;\r\n\r\n    public void setDisplay(Display display) {\r\n        this.display = display;\r\n    }\r\n\r\n    public void setHeroes (BaseGameHeroes heroes){\r\n        this.heroes = heroes;\r\n    }\r\n\r\n    @Override\r\n    public IParty createPlayerParty(String partyName, Hero ICharacter1, Hero ICharacter2, Hero ICharacter3) {\r\n        return new Party(partyName, ICharacter1, ICharacter2, ICharacter3);\r\n    }\r\n\r\n    @Override\r\n    public IParty createCPUParty(String partyName, Hero ICharacter1, Hero ICharacter2, Hero ICharacter3) {\r\n        return new Party(partyName, ICharacter1, ICharacter2, ICharacter3);\r\n    }\r\n\r\n    @Override\r\n    public void saveGame() {\r\n        String path1 = \"playerDB.json\";\r\n        String path2 = \"comDB.json\";\r\n        Gson gson = new GsonBuilder()\r\n               .setPrettyPrinting()\r\n               .create();\r\n\r\n       try (FileWriter writer1 = new FileWriter(path1)){\r\n           gson.toJson(this.playerParty, writer1);\r\n       }catch (IOException e){\r\n           e.printStackTrace();\r\n           throw new RuntimeException(\"Failed to write file to : \" + path1, e);\r\n       }\r\n\r\n       try ( FileWriter writer2 = new FileWriter(path2)){\r\n           gson.toJson(this.cpuParty, writer2);\r\n       }catch (IOException e){\r\n           e.printStackTrace();\r\n           throw new RuntimeException(\"Failed to write file to : \" + path2, e);\r\n       }\r\n\r\n       display.saveGame();\r\n       display.thankYou();\r\n       exitGame();\r\n    }\r\n\r\n    @Override\r\n    public void loadGame() {\r\n        Gson gson = new GsonBuilder()\r\n                .setPrettyPrinting()\r\n                .create();\r\n\r\n        String path1 = \"playerDB.json\";\r\n        String path2 = \"comDB.json\";\r\n        try (FileReader reader1 = new FileReader(path1);){\r\n            Type playerPartyToken = new TypeToken<Party>(){}.getType();\r\n            this.playerParty = gson.fromJson(reader1, playerPartyToken);\r\n        }catch (IOException e){\r\n            e.printStackTrace();\r\n            throw new RuntimeException(\"Failed to read file : \" + path1, e);\r\n        }\r\n\r\n        try (FileReader reader2 = new FileReader(path2);){\r\n            Type cpuPartyToken = new TypeToken<Party>(){}.getType();\r\n            this.cpuParty = gson.fromJson(reader2, cpuPartyToken);\r\n        }catch (IOException e){\r\n            e.printStackTrace();\r\n            throw new RuntimeException(\"Failed to read file : \" + path2, e);\r\n        }\r\n\r\n        if (this.playerParty == null && this.cpuParty == null){\r\n            System.out.println(\"---------------------------------------------------------------------\");\r\n            System.out.println(\"|  Sorry, you haven't save any game before, please choose new game  |\");\r\n            System.out.println(\"---------------------------------------------------------------------\");\r\n            System.out.println();\r\n            System.out.println();\r\n            start();\r\n        }\r\n\r\n        assert this.playerParty != null;\r\n        display.readyGameDisplay(this.playerParty);\r\n        String select = sc.nextLine();\r\n        boolean isTrue = true;\r\n        while (isTrue){\r\n            switch (select) {\r\n                case \"y\" -> {\r\n                    isTrue = false;\r\n                    gameON();\r\n                }\r\n                case \"n\" -> {\r\n                    start();\r\n                }\r\n                default -> System.out.println(\"Please choose between ( y | n ) !!!\");\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public IParty nextTurn() {\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public IParty winner() {\r\n        if (this.playerParty.isDefeated()){\r\n            return this.cpuParty;\r\n        }else {\r\n            return this.playerParty;\r\n        }\r\n    }\r\n\r\n    public void start (){\r\n        display.brawlHeroes();\r\n        display.menuGame();\r\n\r\n        boolean isTrue = true;\r\n        while (isTrue){\r\n            String select = sc.nextLine();\r\n            switch (select) {\r\n                case \"a\" -> {\r\n                    isTrue = false;\r\n                    newGame();\r\n                }\r\n                case \"b\" -> {\r\n                    isTrue = false;\r\n                    loadGame();\r\n                }\r\n                case \"c\" -> {\r\n                    heroesPedia();\r\n                }\r\n                case \"d\" -> {\r\n                    isTrue = false;\r\n                    exitGame();\r\n                }\r\n                default -> {\r\n                    System.out.println(\"Please choose between ( a | b | c | d) !!!\");\r\n                    System.out.print(\"Your Choice : \");\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private void heroesPedia () {\r\n        display.heroespedia();\r\n        boolean isTrue = true;\r\n        while (isTrue) {\r\n            String select = sc.nextLine();\r\n            if (select.equals(\"b\")) {\r\n                isTrue = false;\r\n                start();\r\n            } else {\r\n                System.out.println(\"Please choose ( b ) !!!\");\r\n                System.out.print(\"Your Choice : \");\r\n            }\r\n        }\r\n    }\r\n\r\n    private void newGame (){\r\n        display.newGameMenu();\r\n        boolean isTrue = true;\r\n\r\n        while (isTrue){\r\n            String select = sc.nextLine();\r\n            switch (select) {\r\n                case \"a\" -> {\r\n                    isTrue = false;\r\n                    createPartyForPlayer();\r\n                }\r\n                case \"b\" -> {\r\n                    isTrue = false;\r\n                    start();\r\n                }\r\n                default -> {\r\n                    System.out.println(\"Please choose between ( a | b ) !!!\");\r\n                    System.out.print(\"Your Choice : \");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private void exitGame (){\r\n        System.exit(0);\r\n    }\r\n\r\n    private void createPartyForPlayer (){\r\n        display.createTeam();\r\n\r\n        String partyName = sc.nextLine();\r\n        if (partyName.length() > 13){\r\n            System.out.println(\"Your team name should be less than 12 letters\");\r\n            createPartyForPlayer();\r\n        }\r\n\r\n        display.listHero();\r\n\r\n        ArrayList <Hero> listHeroes = new ArrayList<>();\r\n\r\n        int i = 1;\r\n        while (listHeroes.size() < 3){\r\n            System.out.print(\"Heroes \" + (i) + \" : \");\r\n            String select = sc.nextLine();\r\n\r\n            Hero result = selectHero(select);\r\n\r\n            if (listHeroes.contains(result)){\r\n                System.out.println(\"---------------------------------------------------------------------\");\r\n                System.out.println(\"|        Hero already selected, please select another hero!         |\");\r\n                System.out.println(\"---------------------------------------------------------------------\");\r\n            }else {\r\n                if (result != null){\r\n                    listHeroes.add(result);\r\n                    heroes.useHero(result.getName());\r\n                    int l = result.getName().length() + 20;\r\n                    int r = 47 - l;\r\n                    System.out.println(\"---------------------------------------------------------------------\");\r\n                    System.out.printf(\"|%\" + l  + \"s Added to Team Party %\" + r +  \"s\\n\", result.getName(), \"|\");\r\n                    System.out.println(\"---------------------------------------------------------------------\");\r\n                    i++;\r\n                }else {\r\n                    System.out.println(\"Please choose heroes between 1 - 12 or 'c' to create hero!\");\r\n                }\r\n            }\r\n        }\r\n\r\n        this.playerParty = createPlayerParty(partyName, listHeroes.get(0), listHeroes.get(1), listHeroes.get(2));\r\n\r\n        display.readyGameDisplay(this.playerParty);\r\n\r\n        boolean isTrue = true;\r\n        while (isTrue){\r\n            String select = sc.nextLine();\r\n            switch (select) {\r\n                case \"y\" -> {\r\n                    isTrue = false;\r\n                    createPartyForCPU();\r\n                    gameON();\r\n                }\r\n                case \"n\" -> {\r\n                    isTrue = false;\r\n                    createPartyForPlayer();\r\n                }\r\n                default -> {\r\n                    System.out.println(\"Please choose between ( y | n ) !!!\");\r\n                    System.out.print(\"Your Choice : \");\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    private void createPartyForCPU (){\r\n        ArrayList <Hero> listHeroesCOM = new ArrayList<>();\r\n\r\n        while (listHeroesCOM.size() < 3){\r\n            int rNum = random.nextInt(12);\r\n            Hero result = selectHero(String.valueOf(rNum + 1));\r\n\r\n            if (!listHeroesCOM.contains(result)){\r\n                if (result != null && !heroes.isUsed(result.getName())){\r\n                    listHeroesCOM.add(result);\r\n                }\r\n            }\r\n        }\r\n        this.cpuParty = createCPUParty(\"COM\", listHeroesCOM.get(0), listHeroesCOM.get(1), listHeroesCOM.get(2));\r\n    }\r\n\r\n\r\n    private void gameON (){\r\n        int rNUm = random.nextInt(2);\r\n\r\n        if (rNUm == 0){\r\n            playerParty.setTurn(true);\r\n            cpuParty.setTurn(false);\r\n        }else {\r\n            playerParty.setTurn(false);\r\n            cpuParty.setTurn(true);\r\n        }\r\n\r\n        while (!playerParty.isDefeated() && !cpuParty.isDefeated()){\r\n            display.gameField(this.playerParty, this.cpuParty);\r\n\r\n            if (playerParty.isTurn()){\r\n                System.out.println(\"---------------------------------------------------------------------\");\r\n                System.out.println(\"|                            Your Turn                              |\");\r\n                System.out.println(\"---------------------------------------------------------------------\");\r\n                playerTurn();\r\n\r\n                playerParty.setTurn(false);\r\n                cpuParty.setTurn(true);\r\n\r\n            }else if (cpuParty.isTurn()){\r\n                System.out.println(\"---------------------------------------------------------------------\");\r\n                System.out.println(\"|                             COM Turn                              |\");\r\n                System.out.println(\"---------------------------------------------------------------------\");\r\n                cpuTurn();\r\n\r\n                cpuParty.setTurn(false);\r\n                playerParty.setTurn(true);\r\n            }\r\n            decreamentEffect(this.playerParty.getCharacters());\r\n            decreamentEffect(this.cpuParty.getCharacters());\r\n            increamentManaPerTurn (this.playerParty.getCharacters(), this.cpuParty.getCharacters());\r\n        }\r\n\r\n        IParty winnerTeam = winner();\r\n\r\n        if (winnerTeam != null){\r\n            display.winnerBanner(winnerTeam);\r\n        }\r\n\r\n        display.playAgainOrNo();\r\n\r\n        boolean isTrue = true;\r\n        while (isTrue){\r\n            String select = sc.nextLine();\r\n            if (select.equals(\"y\")){\r\n                isTrue = false;\r\n                start();\r\n            } else if (select.equals(\"n\")) {\r\n                isTrue = false;\r\n                display.thankYou();\r\n                exitGame();\r\n            }else {\r\n                System.out.println(\"Please choose between ( y | n ) !!!\");\r\n            }\r\n        }\r\n    }\r\n\r\n    private void increamentManaPerTurn (ArrayList<Hero> listHeroPlayer, ArrayList<Hero> listHeroCOM){\r\n        for (Hero hero : listHeroPlayer){\r\n            if (!hero.isDefeated()){\r\n                hero.incrementManaPerTurn();\r\n            }\r\n        }\r\n\r\n        for (Hero hero : listHeroCOM){\r\n            if (!hero.isDefeated()){\r\n                hero.incrementManaPerTurn();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private void cpuTurn(){\r\n        ArrayList<Hero> listHeroPlayer = this.playerParty.getCharacters();\r\n        ArrayList<Hero> listHeroCOM = this.cpuParty.getCharacters();\r\n\r\n        int i = 0;\r\n        int select;\r\n\r\n        while ((!listHeroCOM.get(0).isTurn() && !listHeroCOM.get(0).isDefeated()) || (!listHeroCOM.get(1).isTurn() && !listHeroCOM.get(1).isDefeated()) || (!listHeroCOM.get(2).isTurn() && !listHeroCOM.get(2).isDefeated())){\r\n\r\n            if (i == 3){\r\n                break;\r\n            }\r\n\r\n            Hero hero = listHeroCOM.get(i);\r\n\r\n            if (hero.isTurn() || hero.isDefeated()){\r\n                i++;\r\n                continue;\r\n            }\r\n\r\n            if (hero.getEffect().isStunned()){\r\n                System.out.println(\"Hero got stunned !\");\r\n                hero.setTurn(true);\r\n                i++;\r\n                continue;\r\n            } else if (hero.getEffect().isTaunted()) {\r\n                Hero heroTaunting = hero.getEffect().getTauntingHero();\r\n                System.out.println(\"Hero got taunted, hero only can use basic attack or special attack!\");\r\n                display.tauntedSkill();\r\n                boolean isTrue = true;\r\n                while (isTrue){\r\n                    select = random.nextInt(2);\r\n                    String strRand = String.valueOf(select + 1);\r\n                    if (strRand.equals(\"1\")){\r\n                        if (!heroTaunting.isDefeated()){\r\n                            hero.normalAttack(heroTaunting);\r\n                            hero.setTurn(true);\r\n                            i++;\r\n                            break;\r\n                        }else {\r\n                            isTrue = false;\r\n                            hero.getEffect().nullifyTaunt();\r\n                        }\r\n                    } else if (strRand.equals(\"2\")) {\r\n                        if (!heroTaunting.isDefeated()){\r\n                            hero.specialAttack(heroTaunting);\r\n                            hero.setTurn(true);\r\n                            i++;\r\n                            break;\r\n                        }else {\r\n                            isTrue = false;\r\n                            hero.getEffect().nullifyTaunt();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            boolean isTrue = true;\r\n            while (isTrue){\r\n                if (hero.hasSkill1() && hero.hasSkill2()){\r\n                    if ((hero.getMana() < hero.getSkill1().getManaCost()) && (hero.getMana() < hero.getSkill2().getManaCost())){\r\n                        select = random.nextInt(2);\r\n                    }else {\r\n                        select = random.nextInt(4);\r\n                    }\r\n                } else {\r\n                    if (hero.getMana() < hero.getSkill1().getManaCost()){\r\n                        select = random.nextInt(2);\r\n                    } else{\r\n                        select = random.nextInt(3);\r\n                    }\r\n                }\r\n\r\n                String strRand = String.valueOf(select + 1);\r\n\r\n                if (strRand.equals(\"1\")){\r\n\r\n                    int rAlgo = cpuAlgorihtmForEnemy(listHeroPlayer);\r\n\r\n                    Hero player = listHeroPlayer.get(rAlgo);\r\n\r\n                    if (!player.isDefeated()){\r\n                        hero.normalAttack(player);\r\n                        isTrue = false;\r\n                    }else {\r\n                        continue;\r\n                    }\r\n\r\n                } else if (strRand.equals(\"2\")) {\r\n\r\n                    int rAlgo = cpuAlgorihtmForEnemy(listHeroPlayer);\r\n                    Hero player = listHeroPlayer.get(rAlgo);\r\n\r\n                    if (!player.isDefeated()){\r\n                        hero.specialAttack(player);\r\n                        isTrue = false;\r\n                    }else {\r\n                        continue;\r\n                    }\r\n\r\n                } else if (strRand.equals(\"3\")) {\r\n                    if (hero.getSkill1().getTarget() == SkillTarget.SINGLE_ENEMY){\r\n\r\n                        select = cpuAlgorihtmForEnemy(listHeroPlayer);\r\n                        if (select == -1){\r\n                            continue;\r\n                        }\r\n\r\n                    } else if (hero.getSkill1().getTarget() == SkillTarget.SINGLE_ALLY) {\r\n\r\n                        select = cpuAlgorihtmForAlly(listHeroCOM);\r\n                        if (select == -1){\r\n                            continue;\r\n                        }\r\n\r\n                    } else if (hero.getSkill1().getTarget() == SkillTarget.DEAD_ALLY) {\r\n\r\n                        select = cpuAlgorihtmDeadAlly(listHeroCOM);\r\n                        if (select == -1){\r\n                            continue;\r\n                        }\r\n\r\n                        Hero player = listHeroCOM.get(select);\r\n                        if (!player.isDefeated()){\r\n                            hero.useSkill1(player);\r\n                            hero.setTurn(true);\r\n                            i++;\r\n                            break;\r\n                        }else {\r\n                            continue;\r\n                        }\r\n\r\n                    } else if (hero.getSkill1().getTarget() == SkillTarget.ALL_ENEMY){\r\n\r\n                        if (!this.playerParty.isDefeated()){\r\n                            hero.useSkill1(listHeroPlayer);\r\n                            hero.setTurn(true);\r\n                            i++;\r\n                            break;\r\n                        }else {\r\n                            continue;\r\n                        }\r\n\r\n                    } else if (hero.getSkill1().getTarget() == SkillTarget.ALL_ALLY) {\r\n\r\n                        if (!this.cpuParty.isDefeated()){\r\n                            hero.useSkill1(listHeroCOM);\r\n                            hero.setTurn(true);\r\n                            i++;\r\n                        }else {\r\n                            continue;\r\n                        }\r\n\r\n                    } else if (hero.getSkill1().getTarget() == SkillTarget.SELF) {\r\n\r\n                        if (!hero.isDefeated()){\r\n                            hero.useSkill1(hero);\r\n                            hero.setTurn(true);\r\n                            i++;\r\n                            break;\r\n                        }else {\r\n                            continue;\r\n                        }\r\n\r\n                    }\r\n\r\n                    Hero player = listHeroPlayer.get(select);\r\n                    if (!player.isDefeated()){\r\n                        hero.useSkill1(player);\r\n                        isTrue = false;\r\n                    }else {\r\n                        continue;\r\n                    }\r\n\r\n                } else if (strRand.equals(\"4\")) {\r\n\r\n                    if (hero.getSkill2().getTarget() == SkillTarget.SINGLE_ENEMY){\r\n\r\n                        select = cpuAlgorihtmForEnemy(listHeroPlayer);\r\n                        if (select == -1){\r\n                            continue;\r\n                        }\r\n\r\n                    } else if (hero.getSkill2().getTarget() == SkillTarget.SINGLE_ALLY) {\r\n\r\n                        select = cpuAlgorihtmForAlly(listHeroCOM);\r\n                        if (select == -1){\r\n                            continue;\r\n                        }\r\n\r\n                    } else if (hero.getSkill2().getTarget() == SkillTarget.DEAD_ALLY) {\r\n\r\n                        select = cpuAlgorihtmDeadAlly(listHeroCOM);\r\n                        if (select == -1){\r\n                            continue;\r\n                        }\r\n\r\n                    } else if (hero.getSkill2().getTarget() == SkillTarget.ALL_ENEMY){\r\n\r\n                        if (!this.playerParty.isDefeated()){\r\n                            hero.useSkill2(listHeroPlayer);\r\n                            hero.setTurn(true);\r\n                            i++;\r\n                            break;\r\n                        }else {\r\n                            continue;\r\n                        }\r\n\r\n                    } else if (hero.getSkill2().getTarget() == SkillTarget.ALL_ALLY) {\r\n\r\n                        if (!this.cpuParty.isDefeated()){\r\n                            hero.useSkill2(listHeroCOM);\r\n                            hero.setTurn(true);\r\n                            i++;\r\n                            break;\r\n                        }else {\r\n                            continue;\r\n                        }\r\n\r\n                    } else if (hero.getSkill2().getTarget() == SkillTarget.SELF) {\r\n\r\n                        if (!hero.isDefeated()){\r\n                            hero.useSkill2(hero);\r\n                            hero.setTurn(true);\r\n                            i++;\r\n                            break;\r\n                        }else {\r\n                            continue;\r\n                        }\r\n\r\n                    }\r\n\r\n                    Hero enemy = listHeroPlayer.get(select);\r\n                    if (!enemy.isDefeated()){\r\n                        hero.useSkill2(enemy);\r\n                        isTrue = false;\r\n                    }else {\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n            i++;\r\n            hero.setTurn(true);\r\n        }\r\n        resetHeroTurn(listHeroCOM);\r\n    }\r\n\r\n\r\n    private void playerTurn (){\r\n        ArrayList<Hero> listHeroPlayer = playerParty.getCharacters();\r\n        ArrayList<Hero> listHeroCOM = cpuParty.getCharacters();\r\n\r\n        while ((!listHeroPlayer.get(0).isTurn() && !listHeroPlayer.get(0).isDefeated()) || (!listHeroPlayer.get(1).isTurn() && !listHeroPlayer.get(1).isDefeated()) || (!listHeroPlayer.get(2).isTurn() && !listHeroPlayer.get(2).isDefeated())){\r\n            System.out.print(\"Choose your hero  : \");\r\n            String select = sc.nextLine();\r\n\r\n            if (select.equals(\"x\")){\r\n                display.menuGameWhenPlay();\r\n                select = sc.nextLine();\r\n                if (select.equals(\"b\")){\r\n                    int result = exitGameWhenPlay();\r\n                    if (result == 1){\r\n                        saveGame();\r\n                    } else if (result == 2) {\r\n                        exitGame();\r\n                    } else {\r\n                        continue;\r\n                    }\r\n                }else {\r\n                    continue;\r\n                }\r\n            }\r\n            try {\r\n                Hero hero = listHeroPlayer.get(Integer.parseInt(select) - 1);\r\n\r\n                if (hero.isTurn()){\r\n                    System.out.println(\"Please choose another hero, hero already used!\");\r\n                    continue;\r\n                } else if (hero.isDefeated()){\r\n                    System.out.println(\"Please choose another hero, hero already defeated!\");\r\n                    continue;\r\n                }\r\n\r\n                if (hero.getEffect().isStunned()){\r\n                    System.out.println(\"Hero got stunned please choose another hero!\");\r\n                    hero.setTurn(true);\r\n                    continue;\r\n                } else if (hero.getEffect().isTaunted()) {\r\n                    Hero heroTaunting = hero.getEffect().getTauntingHero();\r\n                    System.out.println(\"Hero got taunted, your hero only can use basic attack or special attack!\");\r\n                    display.tauntedSkill();\r\n                    boolean isTrue = true;\r\n                    while (isTrue){\r\n                        System.out.print(\"Choose your skill : \");\r\n                        select = sc.nextLine();\r\n                        if (select.equals(\"1\")){\r\n                            if (!heroTaunting.isDefeated()){\r\n                                hero.normalAttack(heroTaunting);\r\n                                hero.setTurn(true);\r\n                                break;\r\n                            }else {\r\n                                isTrue = false;\r\n                                hero.getEffect().nullifyTaunt();\r\n                            }\r\n                        } else if (select.equals(\"2\")) {\r\n                            if (!heroTaunting.isDefeated()){\r\n                                hero.specialAttack(heroTaunting);\r\n                                hero.setTurn(true);\r\n                                break;\r\n                            }else {\r\n                                isTrue = false;\r\n                                hero.getEffect().nullifyTaunt();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (hero.hasSkill1() && hero.hasSkill2()){\r\n                    display.hasSkill2(hero);\r\n                } else  {\r\n                    display.hasSkill1(hero);\r\n                }\r\n\r\n                boolean isTrue = true;\r\n                while (isTrue){\r\n                    System.out.print(\"Choose your skill : \");\r\n                    select = sc.nextLine();\r\n\r\n                    if (select.equals(\"1\")){\r\n                        display.listEnemy(this.cpuParty);\r\n\r\n                        System.out.print(\"Choose your target : \");\r\n                        select = sc.nextLine();\r\n\r\n                        Hero enemy = listHeroCOM.get(Integer.parseInt(select) - 1);\r\n                        if (!enemy.isDefeated()){\r\n                            hero.normalAttack(enemy);\r\n                            isTrue = false;\r\n                        }else {\r\n                            System.out.println(\"Sorry your target is already defeated, please choose another target!\");\r\n                        }\r\n\r\n                    } else if (select.equals(\"2\")) {\r\n                        display.listEnemy(this.cpuParty);\r\n                        System.out.print(\"Choose your target : \");\r\n                        select = sc.nextLine();\r\n\r\n                        Hero enemy = listHeroCOM.get(Integer.parseInt(select) - 1);\r\n                        if (!enemy.isDefeated()){\r\n                            hero.specialAttack(enemy);\r\n                            isTrue = false;\r\n                        }else {\r\n                            System.out.println(\"Sorry your target is already defeated, please choose another target!\");\r\n                        }\r\n\r\n\r\n                    } else if (select.equals(\"3\")) {\r\n                        if (hero.getMana() < hero.getSkill1().getManaCost()){\r\n                            System.out.println(\"Sorry your mana is not enough, please use another skill!\");\r\n                            continue;\r\n                        }\r\n\r\n                        if (hero.getSkill1().getTarget() == SkillTarget.SINGLE_ENEMY){\r\n                            display.listEnemy(this.cpuParty);\r\n                        } else if (hero.getSkill1().getTarget() == SkillTarget.SINGLE_ALLY) {\r\n                            display.listAlly(this.playerParty, hero.getName());\r\n                        } else if (hero.getSkill1().getTarget() == SkillTarget.DEAD_ALLY) {\r\n                            display.listDeadAlly(this.playerParty);\r\n                        } else if (hero.getSkill1().getTarget() == SkillTarget.ALL_ENEMY){\r\n\r\n                            if (!this.cpuParty.isDefeated()){\r\n                                hero.useSkill1(listHeroCOM);\r\n                                hero.setTurn(true);\r\n                                break;\r\n                            }else {\r\n                                System.out.println(\"Sorry your target team is already defeated, please choose another target!\");\r\n                            }\r\n                            continue;\r\n                        } else if (hero.getSkill1().getTarget() == SkillTarget.ALL_ALLY) {\r\n                            if (!this.playerParty.isDefeated()){\r\n                                hero.useSkill1(listHeroPlayer);\r\n                                hero.setTurn(true);\r\n                                break;\r\n                            }else {\r\n                                System.out.println(\"Sorry your target team is already defeated, please choose another target!\");\r\n                            }\r\n                            continue;\r\n                        } else if (hero.getSkill1().getTarget() == SkillTarget.SELF) {\r\n                            if (!hero.isDefeated()){\r\n                                hero.useSkill1(hero);\r\n                                hero.setTurn(true);\r\n                                break;\r\n                            }else {\r\n                                System.out.println(\"Sorry your  hero is already defeated, please choose another target!\");\r\n                            }\r\n                            continue;\r\n                        }\r\n\r\n                        while (true){\r\n                            System.out.print(\"Choose your target : \");\r\n                            select = sc.nextLine();\r\n\r\n                            Hero enemy = listHeroCOM.get(Integer.parseInt(select) - 1);\r\n                            if (!enemy.isDefeated()){\r\n                                hero.useSkill1(enemy);\r\n                                isTrue = false;\r\n                                break;\r\n                            }else {\r\n                                System.out.println(\"Sorry your target is already defeated, please choose another target!\");\r\n                            }\r\n                        }\r\n\r\n                    } else if (select.equals(\"4\")) {\r\n                        if (hero.getMana() < hero.getSkill2().getManaCost()){\r\n                            System.out.println(\"Sorry your mana is not enough, please use another skill!\");\r\n                            continue;\r\n                        }\r\n\r\n                        if (hero.getSkill2().getTarget() == SkillTarget.SINGLE_ENEMY){\r\n                            display.listEnemy(this.cpuParty);\r\n                        } else if (hero.getSkill2().getTarget() == SkillTarget.SINGLE_ALLY) {\r\n                            display.listAlly(this.playerParty, hero.getName());\r\n                        } else if (hero.getSkill2().getTarget() == SkillTarget.DEAD_ALLY) {\r\n                            display.listDeadAlly(this.playerParty);\r\n                        } else if (hero.getSkill2().getTarget() == SkillTarget.ALL_ENEMY){\r\n\r\n                            if (!this.cpuParty.isDefeated()){\r\n                                hero.useSkill2(listHeroCOM);\r\n                                hero.setTurn(true);\r\n                                break;\r\n                            }else {\r\n                                System.out.println(\"Sorry your target team is already defeated, please choose another target!\");\r\n                            }\r\n                            continue;\r\n\r\n                        } else if (hero.getSkill2().getTarget() == SkillTarget.ALL_ALLY) {\r\n\r\n                            if (!this.playerParty.isDefeated()){\r\n                                hero.useSkill2(listHeroPlayer);\r\n                                hero.setTurn(true);\r\n                                break;\r\n                            }else {\r\n                                System.out.println(\"Sorry your target team is already defeated, please choose another target!\");\r\n                            }\r\n                            continue;\r\n\r\n                        } else if (hero.getSkill2().getTarget() == SkillTarget.SELF) {\r\n\r\n                            if (!hero.isDefeated()){\r\n                                hero.useSkill2(hero);\r\n                                hero.setTurn(true);\r\n                                break;\r\n                            }else {\r\n                                System.out.println(\"Sorry your target hero is already defeated, please choose another target!\");\r\n                            }\r\n                            continue;\r\n\r\n                        }\r\n\r\n                        while (true) {\r\n                            System.out.print(\"Choose your target : \");\r\n                            select = sc.nextLine();\r\n\r\n                            Hero enemy = listHeroCOM.get(Integer.parseInt(select) - 1);\r\n                            if (!enemy.isDefeated()) {\r\n                                hero.useSkill2(enemy);\r\n                                isTrue = false;\r\n                                break;\r\n                            } else {\r\n                                System.out.println(\"Sorry your target is already defeated, please choose another target!\");\r\n                            }\r\n                        }\r\n\r\n                    } else{\r\n                        continue;\r\n                    }\r\n                }\r\n                hero.setTurn(true);\r\n            }catch (Exception e){\r\n                System.out.println(\"Please select hero between 1 - 3 !\");\r\n                continue;\r\n            }\r\n        }\r\n        resetHeroTurn(listHeroPlayer);\r\n    }\r\n\r\n\r\n    private Hero createHero (){\r\n        display.createHero();\r\n        display.element();\r\n\r\n\r\n        String select = sc.nextLine();\r\n        HeroElement heroElement = selectHeroElement(select);\r\n\r\n        display.role();\r\n\r\n        select = sc.nextLine();\r\n        HeroRole heroRole = (selectHeroRole(select));\r\n\r\n        System.out.println(\"---------------------------------------------------------------------\");\r\n        System.out.println(\"|                           Hero Details                            |\");\r\n        System.out.println(\"---------------------------------------------------------------------\");\r\n        System.out.print(\"Name      : \");\r\n        String name = sc.nextLine();\r\n        System.out.print(\"HP        : \");\r\n        String HP = sc.nextLine();\r\n        System.out.print(\"ATK       : \");\r\n        String ATK = sc.nextLine();\r\n        System.out.print(\"DEF       : \");\r\n        String DEF = sc.nextLine();;\r\n        Hero hero = new Hero(name, Integer.parseInt(HP), Integer.parseInt(ATK), Integer.parseInt(DEF), heroElement, heroRole);\r\n\r\n        System.out.println(\"---------------------------------------------------------------------\");\r\n        System.out.println(\"|                            Hero SKills                            |\");\r\n        System.out.println(\"---------------------------------------------------------------------\");\r\n        display.skillList();\r\n        for (int i = 0; i < 2; i++) {\r\n            System.out.print(\"Choose your favourite skill\" + (i + 1) + \" : \");\r\n            select = sc.nextLine();\r\n            Skill skill = BaseGameSkills.getSkill(Integer.parseInt(select) - 1);\r\n            if (i == 0){\r\n                hero.setSkill1(skill);\r\n            }else {\r\n                hero.setSkill2(skill);\r\n            }\r\n        }\r\n\r\n\r\n        System.out.println(\"---------------------------------------------------------------------\");\r\n        System.out.println(\"|                           Let's Fight                             |\");\r\n        System.out.println(\"---------------------------------------------------------------------\");\r\n\r\n        return hero;\r\n    }\r\n\r\n    private Hero selectHero (String select) {\r\n        Hero temp = null;\r\n\r\n        if (select.equals(\"1\")){\r\n            temp = heroes.getHero(\"Murby\");\r\n        } else if (select.equals(\"2\")) {\r\n            temp = heroes.getHero(\"Helda\");\r\n        } else if (select.equals(\"3\")) {\r\n            temp = heroes.getHero(\"Veld\");\r\n        } else if (select.equals(\"4\")){\r\n            temp = heroes.getHero(\"Deus\");\r\n        } else if (select.equals(\"5\")){\r\n            temp = heroes.getHero(\"Grove\");\r\n        } else if (select.equals(\"6\")){\r\n            temp = heroes.getHero(\"Elisa\");\r\n        } else if (select.equals(\"7\")){\r\n            temp = heroes.getHero(\"Lily\");\r\n        } else if (select.equals(\"8\")){\r\n            temp = heroes.getHero(\"Fara\");\r\n        } else if (select.equals(\"9\")){\r\n            temp = heroes.getHero(\"Theseus\");\r\n        } else if (select.equals(\"10\")){\r\n            temp = heroes.getHero(\"Atla\");\r\n        } else if (select.equals(\"11\")){\r\n            temp = heroes.getHero(\"Marie\");\r\n        } else if (select.equals(\"12\")){\r\n            temp = heroes.getHero(\"Dillo\");\r\n        } else if (select.equalsIgnoreCase(\"c\")){\r\n            temp = createHero();\r\n        }else {\r\n            return null;\r\n        }\r\n        return temp;\r\n    }\r\n\r\n    private HeroElement selectHeroElement (String select){\r\n        if (select.equals(\"a\")){\r\n            return HeroElement.FIRE;\r\n        } else if (select.equals(\"b\")) {\r\n            return HeroElement.WATER;\r\n        } else if (select.equals(\"c\")) {\r\n            return HeroElement.GRASS;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private HeroRole selectHeroRole (String select){\r\n        if (select.equals(\"a\")){\r\n            return HeroRole.FIGHTER;\r\n        } else if (select.equals(\"b\")) {\r\n            return HeroRole.TANK;\r\n        } else if (select.equals(\"c\")) {\r\n            return HeroRole.ARCHER;\r\n        } else if (select.equals(\"d\")) {\r\n            return HeroRole.SUPPORT;\r\n        } else if (select.equals(\"e\")) {\r\n            return HeroRole.MAGE;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private void resetHeroTurn (ArrayList<Hero> listHero){\r\n        listHero.get(0).setTurn(false);\r\n        listHero.get(1).setTurn(false);\r\n        listHero.get(2).setTurn(false);\r\n    }\r\n\r\n    private int cpuAlgorihtmForEnemy (ArrayList <Hero> playerParty){\r\n        int i = -1;\r\n        int hp = Integer.MAX_VALUE;\r\n\r\n        for (int j = 0; j < playerParty.size(); j++) {\r\n            if (playerParty.get(j).getHP() < hp && (!playerParty.get(j).isDefeated())){\r\n                i = j;\r\n                hp = playerParty.get(j).getHP();\r\n            }\r\n        }\r\n        return i;\r\n    }\r\n\r\n    private int cpuAlgorihtmForAlly (ArrayList <Hero> cpuPlayer){\r\n        int i = -1;\r\n        int hp = Integer.MAX_VALUE;\r\n\r\n        for (int j = 0; j < cpuPlayer.size() - 1; j++) {\r\n            if (cpuPlayer.get(j).getHP() < hp && (!cpuPlayer.get(j).isDefeated())){\r\n                i = j;\r\n                hp = cpuPlayer.get(j).getHP();\r\n            }\r\n        }\r\n        return i;\r\n    }\r\n\r\n    private int cpuAlgorihtmDeadAlly (ArrayList <Hero> cpuParty){\r\n        int i = -1;\r\n        for (int j = 0; j < cpuParty.size(); j++) {\r\n            if (cpuParty.get(j).isDefeated()){\r\n                i = j;\r\n                break;\r\n            }\r\n        }\r\n        return i;\r\n    }\r\n\r\n    private int exitGameWhenPlay (){\r\n        display.validateQuitGame();\r\n\r\n        while (true){\r\n            String select = sc.nextLine();\r\n            if (select.equals(\"a\")){\r\n                return 1;\r\n            } else if (select.equals(\"b\")) {\r\n                return 2;\r\n            } else if (select.equals(\"c\")){\r\n                return 3;\r\n            }else {\r\n                System.out.println(\"Please choose between ( a | b | c ) !!!\");\r\n            }\r\n        }\r\n    }\r\n\r\n    private void decreamentEffect (ArrayList<Hero> listHero){\r\n        for (Hero hero : listHero) {\r\n            if (!hero.isDefeated()) {\r\n                hero.getEffect().decrementAll();\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/GameEngine.java b/src/main/java/GameEngine.java
--- a/src/main/java/GameEngine.java	(revision be0f390b17bc6e86a44ff9954879f803317f7b85)
+++ b/src/main/java/GameEngine.java	(date 1685341034476)
@@ -471,6 +471,14 @@
                             continue;
                         }
 
+                        Hero player = listHeroPlayer.get(select);
+                        if (!player.isDefeated()){
+                            hero.useSkill1(player);
+                            isTrue = false;
+                        }else {
+                            continue;
+                        }
+
                     } else if (hero.getSkill1().getTarget() == SkillTarget.SINGLE_ALLY) {
 
                         select = cpuAlgorihtmForAlly(listHeroCOM);
@@ -478,6 +486,15 @@
                             continue;
                         }
 
+                        Hero player = listHeroCOM.get(select);
+                        if (!player.isDefeated()){
+                            hero.useSkill1(player);
+                            isTrue = false;
+                        }else {
+                            continue;
+                        }
+
+
                     } else if (hero.getSkill1().getTarget() == SkillTarget.DEAD_ALLY) {
 
                         select = cpuAlgorihtmDeadAlly(listHeroCOM);
@@ -528,15 +545,6 @@
                         }
 
                     }
-
-                    Hero player = listHeroPlayer.get(select);
-                    if (!player.isDefeated()){
-                        hero.useSkill1(player);
-                        isTrue = false;
-                    }else {
-                        continue;
-                    }
-
                 } else if (strRand.equals("4")) {
 
                     if (hero.getSkill2().getTarget() == SkillTarget.SINGLE_ENEMY){
@@ -546,12 +554,28 @@
                             continue;
                         }
 
+                        Hero enemy = listHeroPlayer.get(select);
+                        if (!enemy.isDefeated()){
+                            hero.useSkill2(enemy);
+                            isTrue = false;
+                        }else {
+                            continue;
+                        }
+
                     } else if (hero.getSkill2().getTarget() == SkillTarget.SINGLE_ALLY) {
 
                         select = cpuAlgorihtmForAlly(listHeroCOM);
                         if (select == -1){
                             continue;
                         }
+
+                        Hero enemy = listHeroCOM.get(select);
+                        if (!enemy.isDefeated()){
+                            hero.useSkill2(enemy);
+                            isTrue = false;
+                        }else {
+                            continue;
+                        }
 
                     } else if (hero.getSkill2().getTarget() == SkillTarget.DEAD_ALLY) {
 
@@ -560,6 +584,14 @@
                             continue;
                         }
 
+                        Hero enemy = listHeroCOM.get(select);
+                        if (!enemy.isDefeated()){
+                            hero.useSkill2(enemy);
+                            isTrue = false;
+                        }else {
+                            continue;
+                        }
+
                     } else if (hero.getSkill2().getTarget() == SkillTarget.ALL_ENEMY){
 
                         if (!this.playerParty.isDefeated()){
@@ -594,14 +626,6 @@
                         }
 
                     }
-
-                    Hero enemy = listHeroPlayer.get(select);
-                    if (!enemy.isDefeated()){
-                        hero.useSkill2(enemy);
-                        isTrue = false;
-                    }else {
-                        continue;
-                    }
                 }
             }
             i++;
@@ -727,10 +751,46 @@
 
                         if (hero.getSkill1().getTarget() == SkillTarget.SINGLE_ENEMY){
                             display.listEnemy(this.cpuParty);
+                            while (true){
+                                System.out.print("Choose your target : ");
+                                select = sc.nextLine();
+                                Hero enemy = listHeroCOM.get(Integer.parseInt(select) - 1);
+                                if (!enemy.isDefeated()){
+                                    hero.useSkill1(enemy);
+                                    isTrue = false;
+                                    break;
+                                }else {
+                                    System.out.println("Sorry your target is already defeated, please choose another target!");
+                                }
+                            }
                         } else if (hero.getSkill1().getTarget() == SkillTarget.SINGLE_ALLY) {
                             display.listAlly(this.playerParty, hero.getName());
+                            while (true){
+                                System.out.print("Choose your target : ");
+                                select = sc.nextLine();
+                                Hero enemy = listHeroPlayer.get(Integer.parseInt(select) - 1);
+                                if (!enemy.isDefeated()){
+                                    hero.useSkill1(enemy);
+                                    isTrue = false;
+                                    break;
+                                }else {
+                                    System.out.println("Sorry your target is already defeated, please choose another target!");
+                                }
+                            }
                         } else if (hero.getSkill1().getTarget() == SkillTarget.DEAD_ALLY) {
                             display.listDeadAlly(this.playerParty);
+                            while (true){
+                                System.out.print("Choose your target : ");
+                                select = sc.nextLine();
+                                Hero enemy = listHeroPlayer.get(Integer.parseInt(select) - 1);
+                                if (!enemy.isDefeated()){
+                                    hero.useSkill1(enemy);
+                                    isTrue = false;
+                                    break;
+                                }else {
+                                    System.out.println("Sorry your target is already defeated, please choose another target!");
+                                }
+                            }
                         } else if (hero.getSkill1().getTarget() == SkillTarget.ALL_ENEMY){
 
                             if (!this.cpuParty.isDefeated()){
@@ -761,20 +821,6 @@
                             continue;
                         }
 
-                        while (true){
-                            System.out.print("Choose your target : ");
-                            select = sc.nextLine();
-
-                            Hero enemy = listHeroCOM.get(Integer.parseInt(select) - 1);
-                            if (!enemy.isDefeated()){
-                                hero.useSkill1(enemy);
-                                isTrue = false;
-                                break;
-                            }else {
-                                System.out.println("Sorry your target is already defeated, please choose another target!");
-                            }
-                        }
-
                     } else if (select.equals("4")) {
                         if (hero.getMana() < hero.getSkill2().getManaCost()){
                             System.out.println("Sorry your mana is not enough, please use another skill!");
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"aa13a6e0-9ca5-4965-975b-793a343e6c14\" name=\"Changes\" comment=\"Fixing minor bug in game engine\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/GameEngine.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/GameEngine.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"ExternalProjectsManager\">\r\n    <system id=\"GRADLE\">\r\n      <state>\r\n        <task path=\"$PROJECT_DIR$\">\r\n          <activation />\r\n        </task>\r\n        <projects_view />\r\n      </state>\r\n    </system>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Rebase.Settings\">\r\n    <option name=\"NEW_BASE\" value=\"origin/master\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2QDbcXNvuQVCONEmyxL5pg0wbM6\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <OptionsSetting value=\"false\" id=\"Update\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/indra/Documents/Developments/Java/Object Oriented Progamming&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settingsdialog.project.gradle&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\" selected=\"Application.App\">\r\n    <configuration name=\"App\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"App\" />\r\n      <module name=\"Swift-Game.main\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"TestMain\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"TestMain\" />\r\n      <module name=\"Swift-Game.main\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Swift-Game [:App.main()]\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\">\r\n      <ExternalSystemSettings>\r\n        <option name=\"executionName\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\r\n        <option name=\"scriptParameters\" value=\"--scan\" />\r\n        <option name=\"taskDescriptions\">\r\n          <list />\r\n        </option>\r\n        <option name=\"taskNames\">\r\n          <list>\r\n            <option value=\":App.main()\" />\r\n          </list>\r\n        </option>\r\n        <option name=\"vmOptions\" />\r\n      </ExternalSystemSettings>\r\n      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>\r\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\r\n      <DebugAllEnabled>false</DebugAllEnabled>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.App\" />\r\n        <item itemvalue=\"Application.TestMain\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"aa13a6e0-9ca5-4965-975b-793a343e6c14\" name=\"Changes\" comment=\"\" />\r\n      <created>1684891182227</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1684891182227</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Create : first init\">\r\n      <created>1684892472796</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684892472796</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Create : display game\">\r\n      <created>1684893599352</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684893599352</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Create : plot game\">\r\n      <created>1684900063309</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684900063309</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Create : character class &amp; skill\">\r\n      <created>1684904725862</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684904725862</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Create : character class &amp; skill\">\r\n      <created>1684906654981</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684906654981</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Create : Update Hero Class\">\r\n      <created>1684918607802</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684918607802</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Added further interface: BaseGameHeroes.java\">\r\n      <created>1684925561728</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684925561729</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Added hero cloning\">\r\n      <created>1684926322780</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684926322780</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Seperate Effect Class and add more effect\">\r\n      <created>1684930738055</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684930738055</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Added more effect, skill, and edited Hero Class\">\r\n      <created>1684933130921</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684933130921</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Added more skill (Purify, AoE, Resurrect)\">\r\n      <created>1684935289775</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684935289775</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Change Skill Target Type\">\r\n      <created>1684936634345</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684936634345</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"Added Taunt skill\">\r\n      <created>1684937037989</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684937037989</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"Added mana deduction and Mana Drain Skill\">\r\n      <created>1684938390692</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684938390692</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"Added further Hero skill interface\">\r\n      <created>1684939823558</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684939823558</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"Bug Fix: fix hero use skill\">\r\n      <created>1684940544597</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684940544597</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"Bug Fix: fix hero use skill\">\r\n      <created>1684942192842</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684942192842</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"Added maxMana and mana regen method per turn\">\r\n      <created>1684944568800</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684944568800</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"Fix Interface\">\r\n      <created>1685008645852</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685008645852</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"Added SkillFunctionality\">\r\n      <created>1685010435898</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685010435898</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"Added Hero Skills\">\r\n      <created>1685022089605</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685022089605</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"Added More Hero Skills and applying Skill to all Heroes\">\r\n      <created>1685029998565</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685029998565</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"Fix no ; in BaseGameHeroes.java\">\r\n      <created>1685109949283</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685109949283</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"Added skills and attacks log\">\r\n      <created>1685112300812</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685112300812</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"Added skills and attacks log\">\r\n      <created>1685113102496</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685113102496</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"Added display option\">\r\n      <created>1685116482059</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685116482059</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"Added display option\">\r\n      <created>1685117340744</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685117340744</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\"Fixing minor bug in game engine &amp; display\">\r\n      <created>1685121009138</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685121009138</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00029\" summary=\"Fixing minor bug in game engine\">\r\n      <created>1685123057933</created>\r\n      <option name=\"number\" value=\"00029\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685123057933</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00030\" summary=\"Fixing minor bug in game engine\">\r\n      <created>1685289823834</created>\r\n      <option name=\"number\" value=\"00030\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685289823834</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"31\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Create : first init\" />\r\n    <MESSAGE value=\"Create : display game\" />\r\n    <MESSAGE value=\"Create : plot game\" />\r\n    <MESSAGE value=\"Create : character class &amp; skill\" />\r\n    <MESSAGE value=\"Create : Update Hero Class\" />\r\n    <MESSAGE value=\"Added further interface: BaseGameHeroes.java\" />\r\n    <MESSAGE value=\"Added hero cloning\" />\r\n    <MESSAGE value=\"Seperate Effect Class and add more effect\" />\r\n    <MESSAGE value=\"Added more effect, skill, and edited Hero Class\" />\r\n    <MESSAGE value=\"Added more skill (Purify, AoE, Resurrect)\" />\r\n    <MESSAGE value=\"Change Skill Target Type\" />\r\n    <MESSAGE value=\"Added Taunt skill\" />\r\n    <MESSAGE value=\"Added mana deduction and Mana Drain Skill\" />\r\n    <MESSAGE value=\"Added further Hero skill interface\" />\r\n    <MESSAGE value=\"Bug Fix: fix hero use skill\" />\r\n    <MESSAGE value=\"Added maxMana and mana regen method per turn\" />\r\n    <MESSAGE value=\"Fix Interface\" />\r\n    <MESSAGE value=\"Added SkillFunctionality\" />\r\n    <MESSAGE value=\"Added Hero Skills\" />\r\n    <MESSAGE value=\"Added More Hero Skills and applying Skill to all Heroes\" />\r\n    <MESSAGE value=\"Fix no ; in BaseGameHeroes.java\" />\r\n    <MESSAGE value=\"Added skills and attacks log\" />\r\n    <MESSAGE value=\"Added display option\" />\r\n    <MESSAGE value=\"Fixing minor bug in game engine &amp; display\" />\r\n    <MESSAGE value=\"Fixing minor bug in game engine\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Fixing minor bug in game engine\" />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/Swift_Game$TestMain.ic\" NAME=\"TestMain Coverage Results\" MODIFIED=\"1685110362021\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision be0f390b17bc6e86a44ff9954879f803317f7b85)
+++ b/.idea/workspace.xml	(date 1685340983529)
@@ -323,7 +323,14 @@
       <option name="project" value="LOCAL" />
       <updated>1685289823834</updated>
     </task>
-    <option name="localTasksCounter" value="31" />
+    <task id="LOCAL-00031" summary="Fixing minor bug in game engine">
+      <created>1685293442188</created>
+      <option name="number" value="00031" />
+      <option name="presentableId" value="LOCAL-00031" />
+      <option name="project" value="LOCAL" />
+      <updated>1685293442188</updated>
+    </task>
+    <option name="localTasksCounter" value="32" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
